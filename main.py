# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui\MainWindowUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QThread, pyqtSignal, Qt
from PyQt5.QtWidgets import QMessageBox

from src.pdfGenerate import getReportData, getReportPdfs, resource_path


class Thread(QThread):
    _signal = pyqtSignal(int)

    def __init__(self, test_data, output_path):
        super(Thread, self).__init__()
        self.td = test_data
        self.output_path = output_path

    def __del__(self):
        self.wait()

    def run(self):
        stud_count = len(self.td.students)
        self._signal.emit(10)
        for stud_idx in range(stud_count):
            status = getReportPdfs(
                self.td.students[stud_idx], self.td, self.output_path
            )
            if type(status) is str:
                print("Error: ", status)
                msg = QMessageBox()
                msg.setWindowTitle("Error")
                msg.setText(status)
                msg.setIcon(QMessageBox.Critical)
                msg.exec_()
            else:
                self._signal.emit(int(((stud_idx + 1) / stud_count) * 100))


class Ui_StudentReportGenerator(object):
    def setupUi(self, StudentReportGenerator):
        StudentReportGenerator.setObjectName("StudentReportGenerator")
        StudentReportGenerator.resize(450, 220)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            StudentReportGenerator.sizePolicy().hasHeightForWidth()
        )
        StudentReportGenerator.setSizePolicy(sizePolicy)
        StudentReportGenerator.setMinimumSize(QtCore.QSize(450, 220))
        StudentReportGenerator.setMaximumSize(QtCore.QSize(450, 220))
        icon = QtGui.QIcon()
        icon.addPixmap(
            QtGui.QPixmap(resource_path("icons/logo.png")),
            QtGui.QIcon.Normal,
            QtGui.QIcon.Off,
        )
        StudentReportGenerator.setWindowIcon(icon)
        StudentReportGenerator.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(StudentReportGenerator)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setMinimumSize(QtCore.QSize(0, 0))
        self.centralwidget.setObjectName("centralwidget")
        self.report_gen_pbar = QtWidgets.QProgressBar(self.centralwidget)
        self.report_gen_pbar.setGeometry(QtCore.QRect(90, 140, 341, 40))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.report_gen_pbar.sizePolicy().hasHeightForWidth()
        )
        self.report_gen_pbar.setSizePolicy(sizePolicy)
        self.report_gen_pbar.setProperty("value", 0)
        self.report_gen_pbar.setAlignment(QtCore.Qt.AlignCenter)
        self.report_gen_pbar.setInvertedAppearance(False)
        self.report_gen_pbar.setFormat("")
        self.report_gen_pbar.setObjectName("report_generation_progressbar")
        self.report_gen_btn = QtWidgets.QPushButton(self.centralwidget)
        self.report_gen_btn.setGeometry(QtCore.QRect(20, 140, 61, 40))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.report_gen_btn.sizePolicy().hasHeightForWidth()
        )
        self.report_gen_btn.setSizePolicy(sizePolicy)
        self.report_gen_btn.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(
            QtGui.QPixmap(resource_path("icons/Start_conversion_btn.png")),
            QtGui.QIcon.Normal,
            QtGui.QIcon.On,
        )
        self.report_gen_btn.setIcon(icon1)
        self.report_gen_btn.setIconSize(QtCore.QSize(40, 35))
        self.report_gen_btn.setObjectName("report_generation_button")
        self.app_name_label = QtWidgets.QLabel(self.centralwidget)
        self.app_name_label.setGeometry(QtCore.QRect(0, 0, 451, 51))
        font = QtGui.QFont()
        font.setFamily("Segoe MDL2 Assets")
        font.setPointSize(14)
        self.app_name_label.setFont(font)
        self.app_name_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.app_name_label.setAlignment(QtCore.Qt.AlignCenter)
        self.app_name_label.setObjectName("app_name_label")
        self.dev_nm_label = QtWidgets.QLabel(self.centralwidget)
        self.dev_nm_label.setGeometry(QtCore.QRect(290, 190, 151, 20))
        self.dev_nm_label.setAlignment(
            Qt.AlignBottom | Qt.AlignRight | Qt.AlignTrailing
        )
        self.dev_nm_label.setObjectName("dev_label")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(20, 50, 411, 85))
        self.layoutWidget.setObjectName("layoutWidget")
        self.form_layout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.form_layout.setContentsMargins(0, 0, 0, 0)
        self.form_layout.setObjectName("form_layout")
        self.labels_layout = QtWidgets.QVBoxLayout()
        self.labels_layout.setContentsMargins(-1, -1, 5, -1)
        self.labels_layout.setSpacing(6)
        self.labels_layout.setObjectName("labels_layout")
        self.input_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Light")
        font.setPointSize(11)
        self.input_label.setFont(font)
        self.input_label.setTextFormat(QtCore.Qt.RichText)
        self.input_label.setAlignment(
            Qt.AlignRight | Qt.AlignTrailing | Qt.AlignVCenter
        )
        self.input_label.setObjectName("input_label")
        self.labels_layout.addWidget(self.input_label)
        self.profile_img_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Light")
        font.setPointSize(11)
        self.profile_img_label.setFont(font)
        self.profile_img_label.setTextFormat(Qt.RichText)
        self.profile_img_label.setAlignment(
            Qt.AlignRight | Qt.AlignTrailing | Qt.AlignVCenter
        )
        self.profile_img_label.setObjectName("profile_img_label")
        self.labels_layout.addWidget(self.profile_img_label)
        self.output_label = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setFamily("Bahnschrift Light")
        font.setPointSize(11)
        self.output_label.setFont(font)
        self.output_label.setTextFormat(QtCore.Qt.RichText)
        self.output_label.setAlignment(
            Qt.AlignRight | Qt.AlignTrailing | Qt.AlignVCenter
        )
        self.output_label.setObjectName("output_label")
        self.labels_layout.addWidget(self.output_label)
        self.form_layout.addLayout(self.labels_layout)
        self.inputs_layout = QtWidgets.QVBoxLayout()
        self.inputs_layout.setObjectName("inputs_layout")
        self.excel_input_file_txt = QtWidgets.QLineEdit(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.excel_input_file_txt.sizePolicy().hasHeightForWidth()
        )
        self.excel_input_file_txt.setSizePolicy(sizePolicy)
        self.excel_input_file_txt.setMinimumSize(QtCore.QSize(230, 0))
        self.excel_input_file_txt.setSizeIncrement(QtCore.QSize(0, 0))
        self.excel_input_file_txt.setObjectName("excel_input_file_txt")
        self.inputs_layout.addWidget(self.excel_input_file_txt)
        self.profile_img_path_txt = QtWidgets.QLineEdit(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.profile_img_path_txt.sizePolicy().hasHeightForWidth()
        )
        self.profile_img_path_txt.setSizePolicy(sizePolicy)
        self.profile_img_path_txt.setMinimumSize(QtCore.QSize(230, 0))
        self.profile_img_path_txt.setObjectName("profile_img_path_txt")
        self.inputs_layout.addWidget(self.profile_img_path_txt)
        self.output_path_txt = QtWidgets.QLineEdit(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.output_path_txt.sizePolicy().hasHeightForWidth()
        )
        self.output_path_txt.setSizePolicy(sizePolicy)
        self.output_path_txt.setMinimumSize(QtCore.QSize(230, 0))
        self.output_path_txt.setObjectName("output_path_txt")
        self.inputs_layout.addWidget(self.output_path_txt)
        self.form_layout.addLayout(self.inputs_layout)
        StudentReportGenerator.setCentralWidget(self.centralwidget)

        self.retranslateUi(StudentReportGenerator)
        QtCore.QMetaObject.connectSlotsByName(StudentReportGenerator)

        self.report_gen_btn.clicked.connect(
            lambda: self.generateReports(
                self.excel_input_file_txt.text(),
                self.profile_img_path_txt.text(),
                self.output_path_txt.text(),
            )
        )

    def retranslateUi(self, StudentReportGenerator):
        _translate = QtCore.QCoreApplication.translate
        StudentReportGenerator.setWindowTitle(
            _translate("StudentReportGenerator", "ReportGen")
        )
        self.app_name_label.setText(
            _translate("StudentReportGenerator", "Student Report Generator")
        )
        self.dev_nm_label.setText(
            _translate("StudentReportGenerator", "Developed by Calvin D'Souza")
        )
        self.input_label.setText(
            _translate("StudentReportGenerator", "Input Excel Path:")
        )
        self.profile_img_label.setText(
            _translate("StudentReportGenerator", "Profile Images Directory:")
        )
        self.output_label.setText(_translate("ReportGen", "Output Path:"))

    def generateReports(self, excel_file, profile_images_path, output_path):
        td = getReportData(excel_file, profile_images_path, "History")
        if type(td) is str:
            print("Warning ", td)
            msg = QMessageBox()
            msg.setWindowTitle("Warning")
            msg.setText(td)
            msg.setIcon(QMessageBox.Warning)
            msg.exec_()
        else:
            self.thread = Thread(td, output_path)
            self.thread._signal.connect(self.signal_accept)
            self.thread.start()
            self.report_gen_btn.setEnabled(False)

    def signal_accept(self, msg):
        self.report_gen_pbar.setValue(int(msg))
        if self.report_gen_pbar.value() >= 99:
            self.report_gen_pbar.setValue(0)
            self.report_gen_btn.setEnabled(True)


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    StudentReportGenerator = QtWidgets.QMainWindow()
    ui = Ui_StudentReportGenerator()
    ui.setupUi(StudentReportGenerator)
    StudentReportGenerator.show()
    sys.exit(app.exec_())
